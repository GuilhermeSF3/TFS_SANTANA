USE SIG
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*CREATE TABLE AUX_PARC_REC
(CONTRATO VARCHAR(20),
DATA_BASE SMALLDATETIME,
COD_PROD VARCHAR(10),
PRODUTO VARCHAR(50),
COD_MODALIDADE VARCHAR(10),
MODALIDADE VARCHAR(50),
PARCELA VARCHAR(10),
ATRASO VARCHAR(20),
DT_VCTO SMALLDATETIME,
DT_LIQ SMALLDATETIME,
COD_FINANCEIRO VARCHAR(50),
PRINCIPAL_DILUIDO FLOAT,
JUROS_PARCELA FLOAT,
MULTA FLOAT,
IOF FLOAT,
DESPESAS FLOAT,
VALOR_MOVIMENTADO FLOAT,
DESCONTO FLOAT,
MORA FLOAT,
VALOR_TOTAL FLOAT,
PREJU VARCHAR(5))*/

IF EXISTS (SELECT NAME FROM SYSOBJECTS 
         WHERE NAME = 'SCR_PARC_REC' AND TYPE = 'P')
   DROP PROCEDURE [DBO].[SCR_PARC_REC]
GO

CREATE PROCEDURE [DBO].[SCR_PARC_REC]  AS 

DECLARE @DATA_REF AS SMALLDATETIME   
DECLARE @DATA_DE AS SMALLDATETIME   
DECLARE @DATA_ATE AS SMALLDATETIME   
 
SET @DATA_REF = GETDATE()   
SET @DATA_REF= CONVERT(DATETIME, CONVERT(VARCHAR(10),GETDATE(),120))    

SET  @DATA_ATE =  CONVERT(CHAR(4),DATEPART(YEAR,GETDATE()))+            
    RIGHT(RTRIM('00'+CONVERT(CHAR(2),DATEPART(MONTH,GETDATE()))),2)+'01'  

SET @DATA_ATE = DATEADD(D,-1,@DATA_ATE)

SET @DATA_DE =  CONVERT(CHAR(4),DATEPART(YEAR,@DATA_ATE))+            
    RIGHT(RTRIM('00'+CONVERT(CHAR(2),DATEPART(MONTH,@DATA_ATE))),2)+'01'  	 
	
IF  DATEPART(day,DATEADD (DD,+1,GETDATE()))=10
            
BEGIN       

DELETE AUX_PARC_REC WHERE DT_LIQ BETWEEN @DATA_DE AND @DATA_ATE

INSERT INTO AUX_PARC_REC
SELECT DISTINCT 
MVNROPER CONTRATO,
PPDTBASE DATA_BASE, 
PPCODPRD COD_PROD, 
TPDESCR PRODUTO, 
PPCODOP COD_MODALIDADE, 
TONOMEOP MODALIDADE,  
PANRPARC PARCELA, 
DATEDIFF(DAY, PADTVCTO, PADTLIQ) ATRASO,
PADTVCTO DT_VCTO, 
PADTLIQ DT_LIQ, 
EFCODMOV +'-'+ HFDESCR COD_FINANCEIRO, 
PAVLRPR PRINCIPAL_DILUIDO, 
PAVLRJR JUROS_PARCELA,
MVDSCMLT+MVVLMVMLT AS MULTA, 
MVVLMVIOC IOF,  
MVVLMVDSPA DESPESAS, 
PAVLRPAGO VALOR_MOVIMENTADO, 
PAVLRDESC DESCONTO, 
MVVLMVMR+MVDSCMR AS MORA, 
PAVLRPR+PAVLRJR+MVVLMVMR+MVDSCMR+MVDSCMLT+MVVLMVIOC+MVVLMVDSPA+MVVLMVMLT AS VALOR_TOTAL,
CASE WHEN PADTLIQ > ACDTTRSCNT AND ACSITCNT = 'P' THEN 'SIM' ELSE 'NÃO' END AS PREJU
FROM CDCSANTANAMICROCREDITO..EMOV1 WITH (NOLOCK),
PROPWEBSMC..CPROP WITH (NOLOCK),
PROPWEBSMC..TPROD WITH (NOLOCK),
CDCSANTANAMICROCREDITO..CPARC X WITH (NOLOCK),
CDCSANTANAMICROCREDITO..EFINA A WITH (NOLOCK),
CDCSANTANAMICROCREDITO..TMODA  WITH (NOLOCK),
CDCSANTANAMICROCREDITO..THFIN WITH (NOLOCK),
CDCSANTANAMICROCREDITO..EACNT P WITH (NOLOCK)
WHERE MVNROPER=PPNROPER AND PPCODPRD=TPCODPRD AND PANROPER=MVNROPER AND TOCODOP=PPCODOP AND HFCODMOV=EFCODMOV 
AND PANRPARC = MVNRPARC AND PANROPER=PPNROPER AND EFNROPER=MVNROPER AND EFNRPARC=MVNRPARC
AND ACNROPER = MVNROPER AND ACNROPER=PPNROPER AND ACNROPER=PANROPER AND ACNROPER=EFNROPER
AND EFNROPER = PPNROPER AND EFNROPER=PANROPER AND EFNRPARC= PANRPARC AND PACNTRL=EFCNTRL AND PACNTRL=MVCNTRL AND EFCNTRL=MVCNTRL AND
PADTLIQ>=@DATA_DE AND PADTLIQ<=@DATA_ATE AND
X.PACNTRL = (SELECT MAX(Y.PACNTRL) FROM CDCSANTANAMICROCREDITO .. CPARC Y  WHERE X.PANROPER = Y.PANROPER AND X.PANRPARC = Y.PANRPARC) AND
P.ACCNTRL = (SELECT MAX(P1.ACCNTRL) FROM CDCSANTANAMICROCREDITO .. EACNT P1 WHERE P.ACNROPER = P1.ACNROPER)                  

END